name: Docker Image CI
on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 4 * *"
env:
  DOCKER_IMAGE_NAME: docker.io/ndscprm/geonetwork
jobs:
  setup:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}      
  
  build:
    runs-on: ubuntu-22.04
    needs: setup
    strategy:
      max-parallel: 1
      matrix:
        version: 
          - 3.10.2
    steps:
      - name: Current DateTime
        id: datetime
        uses: Kaven-Universe/github-action-current-date-time@v1
        with:
          format: "YYYYMMDD-HHmmss"

      - name: Build and push Geonetwork images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        uses: docker/build-push-action@v5.3.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Path to the Dockerfile
          file: Dockerfile
          build-args: |
            GEONETWORK_VERSION=${{ matrix.version }}
          # Always attempt to pull all referenced images
          pull: true
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.version }}-${{ steps.datetime.outputs.time }}
            ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.version }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.version }}
          cache-to: type=inline

      - name: Build and push GN-INDE custom images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        uses: docker/build-push-action@v5.3.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: inde
          # Path to the Dockerfile
          file: Dockerfile
          build-args: |
            GEONETWORK_IMAGE_REPOSITORY=${{ env.DOCKER_IMAGE_NAME }}
            GEONETWORK_IMAGE_TAG=${{ matrix.version }}
          # Always attempt to pull all referenced images
          pull: true
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.version }}-${{ steps.datetime.outputs.time }}-inde
            ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.version }}-inde
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.version }}-inde
          cache-to: type=inline
      
      - name: Analyze for critical and high CVEs
        id: docker-scout-cves
        # if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.version }}
          sarif-file: sarif.output.json
          summary: true
      
      - name: Upload SARIF result
        id: upload-sarif
        # if: ${{ github.event_name != 'pull_request_target' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.output.json
